;; Let's define a function: f(x) = 3x^2 + 9x + 2

!(def f (lambda (x) (+ (* 3 (* x x)) (+ (* 9 x) 2))))

!(assert-eq (f 5) 122)

;; We can create a cryptographic commitment to f.

!(commit f)

;; We open the functional commitment on input 5: Evaluate f(5).

!(call #0x24243a2f507ea8fcb20e8ac5e663796e684ac81406803bc534bf85452ba6f2 5)

;; We can prove the functional-commitment opening.

!(prove)

;; We can inspect the input/output expressions of the proof.

!(inspect "5862775241522ce16db294dded18d925dec61de5a43d7f3dd04c533e779935")

;; Finally, and most importantly, we can verify the proof.

!(verify "5862775241522ce16db294dded18d925dec61de5a43d7f3dd04c533e779935")
