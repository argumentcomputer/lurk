;; Let's define a function: f(x) = 3x^2 + 9x + 2

!(def f (lambda (x) (+ (* 3 (* x x)) (+ (* 9 x) 2))))

!(assert-eq (f 5) 122)

;; We can create a cryptographic commitment to f.

!(commit f)

;; We open the functional commitment on input 5: Evaluate f(5).

!(call #0x197bb2c08ec58b6c84debb1c9d75b4d91c2b1be3a5337f6171d1f896d4c2c2 5)

;; We can prove the functional-commitment opening.

!(prove)

;; We can inspect the input/output expressions of the proof.

!(inspect "3863a71b55ec6f53d1547e503bc69491e87e57063143e7dc62b1a91de4ef7")

;; Finally, and most importantly, we can verify the proof.

!(verify "3863a71b55ec6f53d1547e503bc69491e87e57063143e7dc62b1a91de4ef7")
