;; Let's define a function: f(x) = 3x^2 + 9x + 2

!(def f (lambda (x) (+ (* 3 (* x x)) (+ (* 9 x) 2))))

!(assert-eq (f 5) 122)

;; We can create a cryptographic commitment to f.

!(commit f)

;; We open the functional commitment on input 5: Evaluate f(5).

!(call #0x584d533ca5f821e177459c56090fba62296b44f1cc289510332996224ac2ce 5)

;; We can prove the functional-commitment opening.

!(prove)

;; We can inspect the input/output expressions of the proof.

!(inspect "96aed5bd2fcfe3cd8ba52b6d0361b9af6fddc7a24729de7b9a9b1507802298")

;; Finally, and most importantly, we can verify the proof.

!(verify "96aed5bd2fcfe3cd8ba52b6d0361b9af6fddc7a24729de7b9a9b1507802298")
