;; Let's define a function: f(x) = 3x^2 + 9x + 2

!(def f (lambda (x) (+ (* 3 (* x x)) (+ (* 9 x) 2))))

!(assert-eq (f 5) 122)

;; We can create a cryptographic commitment to f.

!(commit f)

;; We open the functional commitment on input 5: Evaluate f(5).

!(call #0x1aabc88a967eb6c0ab3e73eb5a9cb55380cdcfc8aaf6a488a4620bf67afb4b 5)

;; We can prove the functional-commitment opening.

!(prove)

;; We can inspect the input/output expressions of the proof.

!(inspect "b68e59e1a971a9b02f79cb5073d7ff6b236f685f25ad3cc44890941e521d1")

;; Finally, and most importantly, we can verify the proof.

!(verify "b68e59e1a971a9b02f79cb5073d7ff6b236f685f25ad3cc44890941e521d1")
