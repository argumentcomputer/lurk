!(load "macro.lurk") ;; this will also load util.lurk.
!(load "util.lurk")

!(def macro-env ())
!(def macro-env (bind-macro 'and macro-env
                            (lambda (whole)
                              (if (cdr whole)
                                  (if (cdr (cdr whole))
                                      (list 'if (car (cdr whole))
                                            (cons 'and (cdr (cdr whole))))
                                      (car (cdr whole)))
                                  t))))

!(def macro-env (bind-macro 'or macro-env
                            (lambda (whole)
                              (if (cdr whole)
                                  (if (cdr (cdr whole))
                                      (list 'if (car (cdr whole))
                                            (car (cdr whole)) ;; this is memoized
                                            (cons 'or (cdr (cdr whole))))
                                      (car (cdr whole)))
                                  nil))))

!(def macro-env (bind-macro 'cond macro-env
                            (lambda (whole)
                              (letrec ((aux (lambda (clauses)
                                              (if clauses
                                                  (list 'if
                                                        (caar clauses)
                                                        (cadar clauses)
                                                        (aux (cdr clauses))                                                        )
                                                  nil))))
                                (if (cdr (cdr whole)) (error "malformed cond")
                                    (aux (car (cdr whole))))))))

