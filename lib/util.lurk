!(def position (lambda (elt list)
                 (letrec ((aux (lambda (list)
                                 (if (eq (car list) elt)
                                     0
                                     (+ 1 (aux (cdr list)))))))
                   (if list (aux list)))))

!(defrec nth (lambda (n list)
               (if list
                   (if (= n 0)
                       (car list)
                       (nth (- n 1) (cdr list))))))


!(defrec nth-cdr (lambda (n l)
                   (if (= n 0)
                       l
                       (cdr (nth-cdr (- n 1) l)))))

!(def nth (lambda (n list) (car (nth-cdr n list))))

!(defrec apply (lambda (f args)
                 (if args
                     (if (cdr args)
                         (apply (f (car args)) (cdr args))
                         (f (car args)))
                     (f))))

!(def getf (lambda (plist indicator)
             (letrec ((aux (lambda (plist)
                             (if plist
                                 (if (eq (car plist) indicator)
                                     (car (cdr plist))
                                     (aux (cdr (cdr plist))))))))
               (aux plist))))

!(def assoc (lambda (item alist)
              (letrec ((aux (lambda (alist)
                              (if alist
                                  (if (eq (car (car alist)) item)
                                      (car alist)
                                      (aux (cdr alist)))))))
                (aux alist))))

!(defrec length (lambda (l) (if l (+ 1 (length (cdr l))) 0)))

!(defrec reverse
        (lambda (l)
          (letrec ((aux (lambda (acc l)
                          (if l
                              (aux (cons (car l) acc) (cdr l))
                              acc))))
            (aux nil l))))

!(def zip (lambda (a b)
            (letrec ((aux (lambda (a b)
                            (if a
                                (if b
                                    (cons (cons (car a) (car b)) (aux (cdr a) (cdr b))))))))
              (aux a b))))
